[
  {
    "name": "a",
    "nickname": "a",
    "type": "A",
    "scope": {
      "varName": "a",
      "enclosingMethod": "public void calc()",
      "enclosingClass": "ObjectTest"
    },
    "history": [
      {
        "statement": "A a = new A(5, new int[] { 1, 2, 3 }, new B());",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "{\n  \"num\": 5,\n  \"arr\": [\n    1,\n    2,\n    3\n  ],\n  \"obj\": {\n    \"bInt\": 5\n  }\n}",
        "line": 19
      },
      {
        "statement": "a.num = 1;",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "{\n  \"num\": 1,\n  \"arr\": [\n    1,\n    2,\n    3\n  ],\n  \"obj\": {\n    \"bInt\": 5\n  }\n}",
        "line": 20
      },
      {
        "statement": "a.arr = new int[] { 3, 4, 5 };",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "{\n  \"num\": 1,\n  \"arr\": [\n    3,\n    4,\n    5\n  ],\n  \"obj\": {\n    \"bInt\": 5\n  }\n}",
        "line": 21
      },
      {
        "statement": "a.arr[0] = 0;",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "{\n  \"num\": 1,\n  \"arr\": [\n    0,\n    4,\n    5\n  ],\n  \"obj\": {\n    \"bInt\": 5\n  }\n}",
        "line": 22
      },
      {
        "statement": "a.obj.bInt = 6;",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "{\n  \"num\": 1,\n  \"arr\": [\n    0,\n    4,\n    5\n  ],\n  \"obj\": {\n    \"bInt\": 6\n  }\n}",
        "line": 23
      },
      {
        "statement": "a.obj.setbInt(7);",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "{\n  \"num\": 1,\n  \"arr\": [\n    0,\n    4,\n    5\n  ],\n  \"obj\": {\n    \"bInt\": 7\n  }\n}",
        "line": 24
      },
      {
        "statement": "a.obj = null;",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "{\n  \"num\": 1,\n  \"arr\": [\n    0,\n    4,\n    5\n  ],\n  \"obj\": null\n}",
        "line": 25
      },
      {
        "statement": "num = num2;",
        "enclosingClass": "A",
        "enclosingMethod": "public void setNum(int num2)",
        "value": "{\n  \"num\": 2,\n  \"arr\": [\n    0,\n    4,\n    5\n  ],\n  \"obj\": null\n}",
        "line": 81
      },
      {
        "statement": "this.arr = arr;",
        "enclosingClass": "A",
        "enclosingMethod": "public void setArr(int[] arr)",
        "value": "{\n  \"num\": 2,\n  \"arr\": [\n    6,\n    7,\n    8\n  ],\n  \"obj\": null\n}",
        "line": 85
      },
      {
        "statement": "this.obj = obj;",
        "enclosingClass": "A",
        "enclosingMethod": "public void setObj(B obj)",
        "value": "{\n  \"num\": 2,\n  \"arr\": [\n    6,\n    7,\n    8\n  ],\n  \"obj\": {\n    \"bInt\": 5\n  }\n}",
        "line": 89
      },
      {
        "statement": "alias.num = 3;",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "private void nestedMethod(A alias)",
        "value": "{\n  \"num\": 3,\n  \"arr\": [\n    6,\n    7,\n    8\n  ],\n  \"obj\": {\n    \"bInt\": 5\n  }\n}",
        "line": 62
      },
      {
        "statement": "alias.arr = new int[] { 9, 10, 11 };",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "private void nestedMethod(A alias)",
        "value": "{\n  \"num\": 3,\n  \"arr\": [\n    9,\n    10,\n    11\n  ],\n  \"obj\": {\n    \"bInt\": 5\n  }\n}",
        "line": 63
      },
      {
        "statement": "alias.arr[0] = 1;",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "private void nestedMethod(A alias)",
        "value": "{\n  \"num\": 3,\n  \"arr\": [\n    1,\n    10,\n    11\n  ],\n  \"obj\": {\n    \"bInt\": 5\n  }\n}",
        "line": 64
      },
      {
        "statement": "alias.obj = null;",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "private void nestedMethod(A alias)",
        "value": "{\n  \"num\": 3,\n  \"arr\": [\n    1,\n    10,\n    11\n  ],\n  \"obj\": null\n}",
        "line": 65
      },
      {
        "statement": "num = num2;",
        "enclosingClass": "A",
        "enclosingMethod": "public void setNum(int num2)",
        "value": "{\n  \"num\": 4,\n  \"arr\": [\n    1,\n    10,\n    11\n  ],\n  \"obj\": null\n}",
        "line": 81
      },
      {
        "statement": "this.arr = arr;",
        "enclosingClass": "A",
        "enclosingMethod": "public void setArr(int[] arr)",
        "value": "{\n  \"num\": 4,\n  \"arr\": [\n    12,\n    13,\n    14\n  ],\n  \"obj\": null\n}",
        "line": 85
      },
      {
        "statement": "this.obj = obj;",
        "enclosingClass": "A",
        "enclosingMethod": "public void setObj(B obj)",
        "value": "{\n  \"num\": 4,\n  \"arr\": [\n    12,\n    13,\n    14\n  ],\n  \"obj\": {\n    \"bInt\": 5\n  }\n}",
        "line": 89
      },
      {
        "statement": "alias.obj.bInt = 8;",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "private void nestedMethod(A alias)",
        "value": "{\n  \"num\": 4,\n  \"arr\": [\n    12,\n    13,\n    14\n  ],\n  \"obj\": {\n    \"bInt\": 8\n  }\n}",
        "line": 69
      },
      {
        "statement": "alias.obj.setbInt(9);",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "private void nestedMethod(A alias)",
        "value": "{\n  \"num\": 4,\n  \"arr\": [\n    12,\n    13,\n    14\n  ],\n  \"obj\": {\n    \"bInt\": 9\n  }\n}",
        "line": 70
      },
      {
        "statement": "num = num2;",
        "enclosingClass": "A",
        "enclosingMethod": "public void setNum(int num2)",
        "value": "{\n  \"num\": 1,\n  \"arr\": [\n    12,\n    13,\n    14\n  ],\n  \"obj\": {\n    \"bInt\": 9\n  }\n}",
        "line": 81
      },
      {
        "statement": "a = null;",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "null",
        "line": 31
      },
      {
        "statement": "a = new A(-1, new int[] { -1 }, new B());",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "{\n  \"num\": -1,\n  \"arr\": [\n    -1\n  ],\n  \"obj\": {\n    \"bInt\": 5\n  }\n}",
        "line": 32
      },
      {
        "statement": "notTrackedA.num = 5;",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "{\n  \"num\": 5,\n  \"arr\": [\n    -1\n  ],\n  \"obj\": {\n    \"bInt\": 5\n  }\n}",
        "line": 40
      },
      {
        "statement": "notTrackedA.arr = new int[] { 15, 16, 17 };",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "{\n  \"num\": 5,\n  \"arr\": [\n    15,\n    16,\n    17\n  ],\n  \"obj\": {\n    \"bInt\": 5\n  }\n}",
        "line": 41
      },
      {
        "statement": "notTrackedA.arr[0] = 123;",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "{\n  \"num\": 5,\n  \"arr\": [\n    123,\n    16,\n    17\n  ],\n  \"obj\": {\n    \"bInt\": 5\n  }\n}",
        "line": 42
      },
      {
        "statement": "notTrackedA.obj.bInt = 10;",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "{\n  \"num\": 5,\n  \"arr\": [\n    123,\n    16,\n    17\n  ],\n  \"obj\": {\n    \"bInt\": 10\n  }\n}",
        "line": 43
      },
      {
        "statement": "notTrackedA.obj.setbInt(11);",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "{\n  \"num\": 5,\n  \"arr\": [\n    123,\n    16,\n    17\n  ],\n  \"obj\": {\n    \"bInt\": 11\n  }\n}",
        "line": 44
      },
      {
        "statement": "notTrackedA.obj = null;",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "{\n  \"num\": 5,\n  \"arr\": [\n    123,\n    16,\n    17\n  ],\n  \"obj\": null\n}",
        "line": 45
      },
      {
        "statement": "num = num2;",
        "enclosingClass": "A",
        "enclosingMethod": "public void setNum(int num2)",
        "value": "{\n  \"num\": 6,\n  \"arr\": [\n    123,\n    16,\n    17\n  ],\n  \"obj\": null\n}",
        "line": 81
      },
      {
        "statement": "this.arr = arr;",
        "enclosingClass": "A",
        "enclosingMethod": "public void setArr(int[] arr)",
        "value": "{\n  \"num\": 6,\n  \"arr\": [\n    18,\n    19,\n    20\n  ],\n  \"obj\": null\n}",
        "line": 85
      },
      {
        "statement": "this.obj = obj;",
        "enclosingClass": "A",
        "enclosingMethod": "public void setObj(B obj)",
        "value": "{\n  \"num\": 6,\n  \"arr\": [\n    18,\n    19,\n    20\n  ],\n  \"obj\": {\n    \"bInt\": 5\n  }\n}",
        "line": 89
      },
      {
        "statement": "alias.num = 3;",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "private void nestedMethod(A alias)",
        "value": "{\n  \"num\": 3,\n  \"arr\": [\n    18,\n    19,\n    20\n  ],\n  \"obj\": {\n    \"bInt\": 5\n  }\n}",
        "line": 62
      },
      {
        "statement": "alias.arr = new int[] { 9, 10, 11 };",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "private void nestedMethod(A alias)",
        "value": "{\n  \"num\": 3,\n  \"arr\": [\n    9,\n    10,\n    11\n  ],\n  \"obj\": {\n    \"bInt\": 5\n  }\n}",
        "line": 63
      },
      {
        "statement": "alias.arr[0] = 1;",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "private void nestedMethod(A alias)",
        "value": "{\n  \"num\": 3,\n  \"arr\": [\n    1,\n    10,\n    11\n  ],\n  \"obj\": {\n    \"bInt\": 5\n  }\n}",
        "line": 64
      },
      {
        "statement": "alias.obj = null;",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "private void nestedMethod(A alias)",
        "value": "{\n  \"num\": 3,\n  \"arr\": [\n    1,\n    10,\n    11\n  ],\n  \"obj\": null\n}",
        "line": 65
      },
      {
        "statement": "num = num2;",
        "enclosingClass": "A",
        "enclosingMethod": "public void setNum(int num2)",
        "value": "{\n  \"num\": 4,\n  \"arr\": [\n    1,\n    10,\n    11\n  ],\n  \"obj\": null\n}",
        "line": 81
      },
      {
        "statement": "this.arr = arr;",
        "enclosingClass": "A",
        "enclosingMethod": "public void setArr(int[] arr)",
        "value": "{\n  \"num\": 4,\n  \"arr\": [\n    12,\n    13,\n    14\n  ],\n  \"obj\": null\n}",
        "line": 85
      },
      {
        "statement": "this.obj = obj;",
        "enclosingClass": "A",
        "enclosingMethod": "public void setObj(B obj)",
        "value": "{\n  \"num\": 4,\n  \"arr\": [\n    12,\n    13,\n    14\n  ],\n  \"obj\": {\n    \"bInt\": 5\n  }\n}",
        "line": 89
      },
      {
        "statement": "alias.obj.bInt = 8;",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "private void nestedMethod(A alias)",
        "value": "{\n  \"num\": 4,\n  \"arr\": [\n    12,\n    13,\n    14\n  ],\n  \"obj\": {\n    \"bInt\": 8\n  }\n}",
        "line": 69
      },
      {
        "statement": "alias.obj.setbInt(9);",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "private void nestedMethod(A alias)",
        "value": "{\n  \"num\": 4,\n  \"arr\": [\n    12,\n    13,\n    14\n  ],\n  \"obj\": {\n    \"bInt\": 9\n  }\n}",
        "line": 70
      },
      {
        "statement": "this.obj = obj;",
        "enclosingClass": "A",
        "enclosingMethod": "public void setObj(B obj)",
        "value": "{\n  \"num\": 4,\n  \"arr\": [\n    12,\n    13,\n    14\n  ],\n  \"obj\": {\n    \"bInt\": 5\n  }\n}",
        "line": 89
      },
      {
        "statement": "notTrackedA.obj.bInt = 6;",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "{\n  \"num\": 4,\n  \"arr\": [\n    12,\n    13,\n    14\n  ],\n  \"obj\": {\n    \"bInt\": 6\n  }\n}",
        "line": 53
      },
      {
        "statement": "notTrackedA.obj.setbInt(7);",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "{\n  \"num\": 4,\n  \"arr\": [\n    12,\n    13,\n    14\n  ],\n  \"obj\": {\n    \"bInt\": 7\n  }\n}",
        "line": 54
      }
    ]
  },
  {
    "name": "anotherA",
    "nickname": "anotherA",
    "type": "A",
    "scope": {
      "varName": "anotherA",
      "enclosingMethod": "public void calc()",
      "enclosingClass": "ObjectTest"
    },
    "history": [
      {
        "statement": "A anotherA;",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "\"uninitialized\"",
        "line": 34
      },
      {
        "statement": "anotherA = null;",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "null",
        "line": 35
      },
      {
        "statement": "anotherA = a;",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "{\n  \"num\": -1,\n  \"arr\": [\n    -1\n  ],\n  \"obj\": {\n    \"bInt\": 5\n  }\n}",
        "line": 36
      },
      {
        "statement": "anotherA = new A(-2, new int[] { -2 }, new B());",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "{\n  \"num\": -2,\n  \"arr\": [\n    -2\n  ],\n  \"obj\": {\n    \"bInt\": 5\n  }\n}",
        "line": 37
      }
    ]
  },
  {
    "name": "nestedB",
    "nickname": "nestedB",
    "type": "B",
    "scope": {
      "varName": "nestedB",
      "enclosingMethod": "public void calc()",
      "enclosingClass": "ObjectTest"
    },
    "history": [
      {
        "statement": "B nestedB = new B();",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "{\n  \"bInt\": 5\n}",
        "line": 51
      },
      {
        "statement": "notTrackedA.obj.bInt = 6;",
        "enclosingClass": "ObjectTest",
        "enclosingMethod": "public void calc()",
        "value": "{\n  \"bInt\": 6\n}",
        "line": 53
      },
      {
        "statement": "this.bInt = bInt;",
        "enclosingClass": "B",
        "enclosingMethod": "public void setbInt(int bInt)",
        "value": "{\n  \"bInt\": 7\n}",
        "line": 106
      }
    ]
  }
]